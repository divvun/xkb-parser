file = { SOI ~ (definition)* ~ EOI }
    definition = { block_modifiers ~ symbols }

    block_modifiers = { block_modifier* }
        block_modifier = { "partial" | "hidden" | "default" | "alphanumeric_keys" | "modifier_keys" | "keypad_keys" | "function_keys" | "alternate_group" }
    symbols = { ^"xkb_symbols" ~ string ~ "{" ~ (symbol)* ~ "}" ~ ";" }
        symbol = { ( include | name | key | key_type | virtual_modifiers | modifier_map ) }
            include = { ^"include" ~ string }
            name = { ^"name" ~ group ~ "=" ~ string ~ ";" }
            key_type = { ^"key" ~ "." ~ "type" ~ group? ~ "=" ~ string ~ ";" }
            virtual_modifiers = { ^"virtual_modifiers" ~ (ident ~ ARRAY_SEP?)+ ~ ";" }
            key = { key_mode? ~ ^"key" ~ ident2 ~ "{" ~ (key_value ~ (ARRAY_SEP ~ key_value)*)? ~ "}" ~ ";" }
                key_mode = { key_mode_replace | key_mode_override }
                    key_mode_replace = { ^"replace" }
                    key_mode_override = { ^"override" }
                key_value = { key_names | key_def }
                key_names = { "[" ~ (key_name)* ~ "]" }
                    key_name = _{ ident ~ ARRAY_SEP? }
                key_def = { (type_def | symbol_def | virtual_mods_def | actions_def) }
                    type_def = { ^"type" ~ group? ~ "=" ~ string }
                    symbol_def = { ^"symbols" ~ group ~ "=" ~ key_names }
                    virtual_mods_def = { (^"virtualMods" | ^"vmods") ~ "=" ~ ident }
                    actions_def = { ^"actions" ~ group ~ "=" ~ "[" ~ (action ~ ARRAY_SEP?)* ~ "]" }
                        action = { ident ~ "(" ~ ident ~ "=" ~ (ident ~ ARRAY_SEP?)* ~ ")" }
            modifier_map = { ^"modifier_map" ~ ident ~ "{" ~ ( modifier ~ ARRAY_SEP? )* ~ "}" ~ ";" }
                modifier = { ident2 | ident }

WHITESPACE = _{ " " | "\t" | NEWLINE }
COMMENT = _{ ("//" | "#") ~ (!NEWLINE ~ ANY)* ~ NEWLINE+ }
ARRAY_SEP = _{ "," ~ "\n"? }
ident = @{ (ASCII_ALPHANUMERIC | "_" | "-" | "+")+ }
ident2 = { "<" ~ ident ~ ">" }
group = { "[" ~ ident ~ "]" }

string = _{ "\"" ~ string_content ~ "\"" }
string_content = @{ char* }
    char = {
        !("\"" | "\\") ~ ANY
        | "\\" ~ ("\"" | "\\" | "/" | "|" | "b" | "f" | "n" | "r" | "t")
        | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
    }
